version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: taskboard-postgres
    environment:
      POSTGRES_DB: taskboard_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskboard-network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: taskboard-backend
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=taskboard_dev;Username=postgres;Password=postgres"
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taskboard-network
    restart: unless-stopped

  frontend:
    build:
      context: ../
      dockerfile: frontend/Dockerfile
    container_name: taskboard-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - taskboard-network
    restart: unless-stopped

networks:
  taskboard-network:
    driver: bridge

volumes:
  postgres_data:
